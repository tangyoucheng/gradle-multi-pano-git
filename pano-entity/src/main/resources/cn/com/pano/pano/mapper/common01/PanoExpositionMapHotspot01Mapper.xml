<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.pano.pano.mapper.common01.PanoExpositionMapHotspot01Mapper">
    <resultMap id="BaseResultMap" type="cn.com.pano.pano.model.common01.PanoExpositionMapHotspot01Model"
        extends="cn.com.pano.pano.mapper.common.PanoExpositionMapHotspotMapper.BaseResultMap">
    </resultMap>
    <sql id="Base_Model_Where_Clause">
        <!-- WARNING - @mbg.generated This element is automatically generated by MyBatis Generator, do not modify. -->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and
                                    #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                        separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Base_Model_Where_Clause">
        <!-- WARNING - @mbg.generated This element is automatically generated by MyBatis Generator, do not modify. -->
        <where>
            <foreach collection="baseCondition.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and
                                    #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                        separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <select id="selectByBaseModel" parameterType="cn.com.pano.pano.model.common.PanoExpositionMapHotspotQuery"
        resultMap="BaseResultMap">
        <!-- WARNING - @mbg.generated This element is automatically generated by MyBatis Generator, do not modify. -->
        select
        <if test="distinct">
            distinct
        </if>
        'true' as QUERYID,
        <include refid="cn.com.pano.pano.mapper.common.PanoExpositionMapHotspotMapper.Base_Column_List" />
        from pano_exposition_map_hotspot
        <if test="_parameter != null">
            <include refid="Base_Model_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <delete id="deleteByBaseModel" parameterType="cn.com.pano.pano.model.common.PanoExpositionMapHotspotQuery">
        <!-- WARNING - @mbg.generated This element is automatically generated by MyBatis Generator, do not modify. -->
        delete from pano_exposition_map_hotspot
        <if test="_parameter != null">
            <include refid="Base_Model_Where_Clause" />
        </if>
    </delete>
    <select id="countByBaseModel" parameterType="cn.com.pano.pano.model.common.PanoExpositionMapHotspotQuery"
        resultType="java.lang.Long">
        <!-- WARNING - @mbg.generated This element is automatically generated by MyBatis Generator, do not modify. -->
        select count(*) from pano_exposition_map_hotspot
        <if test="_parameter != null">
            <include refid="Base_Model_Where_Clause" />
        </if>
    </select>
    <update id="updateByBaseModelSelective" parameterType="map">
        <!-- WARNING - @mbg.generated This element is automatically generated by MyBatis Generator, do not modify. -->
        update pano_exposition_map_hotspot
        <set>
            <if test="record.expositionMapHotspotId != null">
                exposition_map_hotspot_id = #{record.expositionMapHotspotId,jdbcType=VARCHAR},
            </if>
            <if test="record.expositionMapId != null">
                exposition_map_id = #{record.expositionMapId,jdbcType=VARCHAR},
            </if>
            <if test="record.expositionMapHotspotX != null">
                exposition_map_hotspot_x = #{record.expositionMapHotspotX,jdbcType=VARCHAR},
            </if>
            <if test="record.expositionMapHotspotY != null">
                exposition_map_hotspot_y = #{record.expositionMapHotspotY,jdbcType=VARCHAR},
            </if>
            <if test="record.expositionMapHotspotHeading != null">
                exposition_map_hotspot_heading = #{record.expositionMapHotspotHeading,jdbcType=VARCHAR},
            </if>
            <if test="record.expositionMapHotspotAlign != null">
                exposition_map_hotspot_align = #{record.expositionMapHotspotAlign,jdbcType=VARCHAR},
            </if>
            <if test="record.panoramaId != null">
                panorama_id = #{record.panoramaId,jdbcType=VARCHAR},
            </if>
            <if test="record.expositionMapHotspotUrl != null">
                exposition_map_hotspot_url = #{record.expositionMapHotspotUrl,jdbcType=VARCHAR},
            </if>
            <if test="record.deleteFlag != null">
                DELETE_FLAG = #{record.deleteFlag,jdbcType=BIT},
            </if>
            <if test="record.createUserId != null">
                CREATE_USER_ID = #{record.createUserId,jdbcType=VARCHAR},
            </if>
            <if test="record.createDate != null">
                CREATE_DATE = #{record.createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.lastUpdateUserId != null">
                LAST_UPDATE_USER_ID = #{record.lastUpdateUserId,jdbcType=VARCHAR},
            </if>
            <if test="record.lastUpdateDate != null">
                LAST_UPDATE_DATE = #{record.lastUpdateDate,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Base_Model_Where_Clause" />
        </if>
    </update>
    <update id="updateByBaseModel" parameterType="map">
        <!-- WARNING - @mbg.generated This element is automatically generated by MyBatis Generator, do not modify. -->
        update pano_exposition_map_hotspot
        set exposition_map_hotspot_id =
        #{record.expositionMapHotspotId,jdbcType=VARCHAR},
        exposition_map_id =
        #{record.expositionMapId,jdbcType=VARCHAR},
        exposition_map_hotspot_x =
        #{record.expositionMapHotspotX,jdbcType=VARCHAR},
        exposition_map_hotspot_y =
        #{record.expositionMapHotspotY,jdbcType=VARCHAR},
        exposition_map_hotspot_heading =
        #{record.expositionMapHotspotHeading,jdbcType=VARCHAR},
        exposition_map_hotspot_align =
        #{record.expositionMapHotspotAlign,jdbcType=VARCHAR},
        panorama_id = #{record.panoramaId,jdbcType=VARCHAR},
        exposition_map_hotspot_url = #{record.expositionMapHotspotUrl,jdbcType=VARCHAR},
        DELETE_FLAG =
        #{record.deleteFlag,jdbcType=BIT},
        CREATE_USER_ID = #{record.createUserId,jdbcType=VARCHAR},
        CREATE_DATE =
        #{record.createDate,jdbcType=TIMESTAMP},
        LAST_UPDATE_USER_ID = #{record.lastUpdateUserId,jdbcType=VARCHAR},
        LAST_UPDATE_DATE = #{record.lastUpdateDate,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Base_Model_Where_Clause" />
        </if>
    </update>
    <!-- 根据expositionId获取展览地图热点信息 -->
    <select id="selectByExpositionId" parameterType="map" resultMap="BaseResultMap">
        SELECT w_map_hotspot.*
        FROM pano_exposition_map_hotspot w_map_hotspot
        INNER JOIN pano_exposition_map w_map ON
        w_map.exposition_map_id=w_map_hotspot.exposition_map_id
        INNER JOIN pano_exposition w_expo ON
        w_expo.exposition_id=w_map.exposition_id
        <where>
            w_expo.exposition_id = #{expositionId}
        </where>
    </select>

</mapper>