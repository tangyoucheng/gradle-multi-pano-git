

  
	//eclipseJdt << {
	//	File f = file('.settings/org.eclipse.core.resources.prefs')
	//	f.write('eclipse.preferences.version=1\n')
	//	f.append('encoding/<project>=')
	//	f.append(defaultEncoding)
	//}
	eclipseJdt {
		doLast{
			File f = file('.settings/org.eclipse.core.resources.prefs')
			f.write('eclipse.preferences.version=1\n')
			f.append('encoding/<project>=UTF-8\n')
		}
	}
	
	//eclipse.classpath.file {
	//	whenMerged { classpath ->
	//		classpath.entries.findAll { entry -> entry.kind == 'output' }*.path = 'build/classes'
	//	}
	//}
	
    // 设置 checkstyle
	eclipseJdt {
		doLast{
			File f = file('.checkstyle')
			f.write('<?xml version="1.0" encoding="UTF-8"?>\n')
			f.append('\n')
			f.append('<fileset-config file-format-version="1.2.0" simple-config="true" sync-formatter="false">\n')
			f.append('  <fileset name="all" enabled="true" check-config-name="check-style-google" local="false">\n')
			f.append('    <file-match-pattern match-pattern="." include-pattern="true"/>\n')
			f.append('  </fileset>\n')
			f.append('</fileset-config>\n')
			f.append('\n')
		}
	}
	eclipse.project {
		buildCommand 'net.sf.eclipsecs.core.CheckstyleBuilder'
		natures 'net.sf.eclipsecs.core.CheckstyleNature'
	}
	
    // 设置 Project Facets
	eclipseJdt {
		doLast{
			File f = file('.settings/org.eclipse.wst.common.project.facet.core.xml')
			f.write('<?xml version="1.0" encoding="UTF-8"?>\n')
			f.append('<faceted-project>\n')
			f.append('	<fixed facet="jst.java"/>\n')
			f.append('	<fixed facet="jst.web"/>\n')
			f.append('	<installed facet="jst.web" version="4.0.1"/>\n')
			f.append('	<installed facet="jst.java" version="1.8"/>\n')
			f.append('</faceted-project>\n')
		}
	}
	
	// format
	eclipseJdt {
		doLast{
			File f = file('.settings/org.eclipse.jdt.ui.prefs')
			f.write('eclipse.preferences.version=1\n')
			f.append('formatter_profile=_custom-format-java\n')
			f.append('formatter_settings_version=13\n')
			f.append('org.eclipse.jdt.ui.javadoc=false\n')
			f.append('org.eclipse.jdt.ui.text.custom_code_templates=<?xml version\\="1.0" encoding\\="UTF-8" standalone\\="no"?><templates><template autoinsert\\="true" context\\="gettercomment_context" deleted\\="false" description\\="Comment for getter method" enabled\\="true" id\\="org.eclipse.jdt.ui.text.codetemplates.gettercomment" name\\="gettercomment">/**\\r\\n * @return the ${bare_field_name}\\r\\n */</template><template autoinsert\\="true" context\\="settercomment_context" deleted\\="false" description\\="Comment for setter method" enabled\\="true" id\\="org.eclipse.jdt.ui.text.codetemplates.settercomment" name\\="settercomment">/**\\r\\n * @param ${param} the ${bare_field_name} to set\\r\\n */</template><template autoinsert\\="true" context\\="constructorcomment_context" deleted\\="false" description\\="Comment for created constructors" enabled\\="true" id\\="org.eclipse.jdt.ui.text.codetemplates.constructorcomment" name\\="constructorcomment">/**\\r\\n * ${tags}\\r\\n */</template><template autoinsert\\="true" context\\="filecomment_context" deleted\\="false" description\\="Comment for created Java files" enabled\\="true" id\\="org.eclipse.jdt.ui.text.codetemplates.filecomment" name\\="filecomment">/**\\r\\n * \\r\\n */</template><template autoinsert\\="true" context\\="typecomment_context" deleted\\="false" description\\="Comment for created types" enabled\\="true" id\\="org.eclipse.jdt.ui.text.codetemplates.typecomment" name\\="typecomment">/**\\r\\n * @author ${user}\\r\\n *\\r\\n * ${tags}\\r\\n */</template><template autoinsert\\="true" context\\="fieldcomment_context" deleted\\="false" description\\="Comment for fields" enabled\\="true" id\\="org.eclipse.jdt.ui.text.codetemplates.fieldcomment" name\\="fieldcomment">/** */</template><template autoinsert\\="true" context\\="methodcomment_context" deleted\\="false" description\\="Comment for non-overriding methods" enabled\\="true" id\\="org.eclipse.jdt.ui.text.codetemplates.methodcomment" name\\="methodcomment">/**\\r\\n * ${tags}\\r\\n */</template><template autoinsert\\="true" context\\="overridecomment_context" deleted\\="false" description\\="Comment for overriding methods" enabled\\="true" id\\="org.eclipse.jdt.ui.text.codetemplates.overridecomment" name\\="overridecomment">/* (non-Javadoc)\\r\\n * ${see_to_overridden}\\r\\n */</template><template autoinsert\\="true" context\\="delegatecomment_context" deleted\\="false" description\\="Comment for delegate methods" enabled\\="true" id\\="org.eclipse.jdt.ui.text.codetemplates.delegatecomment" name\\="delegatecomment">/**\\r\\n * ${tags}\\r\\n * ${see_to_target}\\r\\n */</template><template autoinsert\\="true" context\\="newtype_context" deleted\\="false" description\\="Newly created files" enabled\\="true" id\\="org.eclipse.jdt.ui.text.codetemplates.newtype" name\\="newtype">${filecomment}\\r\\n${package_declaration}\\r\\n\\r\\n${typecomment}\\r\\n${type_declaration}</template><template autoinsert\\="true" context\\="classbody_context" deleted\\="false" description\\="Code in new class type bodies" enabled\\="true" id\\="org.eclipse.jdt.ui.text.codetemplates.classbody" name\\="classbody">\\r\\n</template><template autoinsert\\="true" context\\="interfacebody_context" deleted\\="false" description\\="Code in new interface type bodies" enabled\\="true" id\\="org.eclipse.jdt.ui.text.codetemplates.interfacebody" name\\="interfacebody">\\r\\n</template><template autoinsert\\="true" context\\="enumbody_context" deleted\\="false" description\\="Code in new enum type bodies" enabled\\="true" id\\="org.eclipse.jdt.ui.text.codetemplates.enumbody" name\\="enumbody">\\r\\n</template><template autoinsert\\="true" context\\="annotationbody_context" deleted\\="false" description\\="Code in new annotation type bodies" enabled\\="true" id\\="org.eclipse.jdt.ui.text.codetemplates.annotationbody" name\\="annotationbody">\\r\\n</template><template autoinsert\\="true" context\\="catchblock_context" deleted\\="false" description\\="Code in new catch blocks" enabled\\="true" id\\="org.eclipse.jdt.ui.text.codetemplates.catchblock" name\\="catchblock">// ${todo} Auto-generated catch block\\r\\n${exception_var}.printStackTrace();</template><template autoinsert\\="true" context\\="methodbody_context" deleted\\="false" description\\="Code in created method stubs" enabled\\="true" id\\="org.eclipse.jdt.ui.text.codetemplates.methodbody" name\\="methodbody">// ${todo} Auto-generated method stub\\r\\n${body_statement}</template><template autoinsert\\="true" context\\="constructorbody_context" deleted\\="false" description\\="Code in created constructor stubs" enabled\\="true" id\\="org.eclipse.jdt.ui.text.codetemplates.constructorbody" name\\="constructorbody">${body_statement}\\r\\n// ${todo} Auto-generated constructor stub</template><template autoinsert\\="true" context\\="getterbody_context" deleted\\="false" description\\="Code in created getters" enabled\\="true" id\\="org.eclipse.jdt.ui.text.codetemplates.getterbody" name\\="getterbody">return ${field};</template><template autoinsert\\="true" context\\="setterbody_context" deleted\\="false" description\\="Code in created setters" enabled\\="true" id\\="org.eclipse.jdt.ui.text.codetemplates.setterbody" name\\="setterbody">${field} \\= ${param};</template></templates>\n')
		}
	}
	eclipseJdt {
		doLast{
			File f = file('.settings/org.eclipse.jdt.core.prefs')
			f.write('eclipse.preferences.version=1\n')
			f.append('org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled\n')
			f.append('org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.8\n')
			f.append('org.eclipse.jdt.core.compiler.codegen.unusedLocal=preserve\n')
			f.append('org.eclipse.jdt.core.compiler.compliance=1.8\n')
			f.append('org.eclipse.jdt.core.compiler.debug.lineNumber=generate\n')
			f.append('org.eclipse.jdt.core.compiler.debug.localVariable=generate\n')
			f.append('org.eclipse.jdt.core.compiler.debug.sourceFile=generate\n')
			f.append('org.eclipse.jdt.core.compiler.problem.assertIdentifier=error\n')
			f.append('org.eclipse.jdt.core.compiler.problem.enumIdentifier=error\n')
			f.append('org.eclipse.jdt.core.compiler.source=1.8\n')
			f.append('org.eclipse.jdt.core.formatter.align_fields_grouping_blank_lines=2147483647\n')
			f.append('org.eclipse.jdt.core.formatter.align_type_members_on_columns=false\n')
			f.append('org.eclipse.jdt.core.formatter.alignment_for_arguments_in_allocation_expression=16\n')
			f.append('org.eclipse.jdt.core.formatter.alignment_for_arguments_in_annotation=16\n')
			f.append('org.eclipse.jdt.core.formatter.alignment_for_arguments_in_enum_constant=16\n')
			f.append('org.eclipse.jdt.core.formatter.alignment_for_arguments_in_explicit_constructor_call=16\n')
			f.append('org.eclipse.jdt.core.formatter.alignment_for_arguments_in_method_invocation=16\n')
			f.append('org.eclipse.jdt.core.formatter.alignment_for_arguments_in_qualified_allocation_expression=16\n')
			f.append('org.eclipse.jdt.core.formatter.alignment_for_assignment=16\n')
			f.append('org.eclipse.jdt.core.formatter.alignment_for_binary_expression=16\n')
			f.append('org.eclipse.jdt.core.formatter.alignment_for_compact_if=16\n')
			f.append('org.eclipse.jdt.core.formatter.alignment_for_conditional_expression=80\n')
			f.append('org.eclipse.jdt.core.formatter.alignment_for_enum_constants=0\n')
			f.append('org.eclipse.jdt.core.formatter.alignment_for_expressions_in_array_initializer=16\n')
			f.append('org.eclipse.jdt.core.formatter.alignment_for_expressions_in_for_loop_header=0\n')
			f.append('org.eclipse.jdt.core.formatter.alignment_for_method_declaration=0\n')
			f.append('org.eclipse.jdt.core.formatter.alignment_for_module_statements=16\n')
			f.append('org.eclipse.jdt.core.formatter.alignment_for_multiple_fields=16\n')
			f.append('org.eclipse.jdt.core.formatter.alignment_for_parameterized_type_references=0\n')
			f.append('org.eclipse.jdt.core.formatter.alignment_for_parameters_in_constructor_declaration=16\n')
			f.append('org.eclipse.jdt.core.formatter.alignment_for_parameters_in_method_declaration=16\n')
			f.append('org.eclipse.jdt.core.formatter.alignment_for_resources_in_try=80\n')
			f.append('org.eclipse.jdt.core.formatter.alignment_for_selector_in_method_invocation=16\n')
			f.append('org.eclipse.jdt.core.formatter.alignment_for_superclass_in_type_declaration=16\n')
			f.append('org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_enum_declaration=16\n')
			f.append('org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_type_declaration=16\n')
			f.append('org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_constructor_declaration=16\n')
			f.append('org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_method_declaration=16\n')
			f.append('org.eclipse.jdt.core.formatter.alignment_for_type_arguments=0\n')
			f.append('org.eclipse.jdt.core.formatter.alignment_for_type_parameters=0\n')
			f.append('org.eclipse.jdt.core.formatter.alignment_for_union_type_in_multicatch=16\n')
			f.append('org.eclipse.jdt.core.formatter.blank_lines_after_imports=1\n')
			f.append('org.eclipse.jdt.core.formatter.blank_lines_after_package=1\n')
			f.append('org.eclipse.jdt.core.formatter.blank_lines_before_field=0\n')
			f.append('org.eclipse.jdt.core.formatter.blank_lines_before_first_class_body_declaration=0\n')
			f.append('org.eclipse.jdt.core.formatter.blank_lines_before_imports=0\n')
			f.append('org.eclipse.jdt.core.formatter.blank_lines_before_member_type=0\n')
			f.append('org.eclipse.jdt.core.formatter.blank_lines_before_method=1\n')
			f.append('org.eclipse.jdt.core.formatter.blank_lines_before_new_chunk=1\n')
			f.append('org.eclipse.jdt.core.formatter.blank_lines_before_package=0\n')
			f.append('org.eclipse.jdt.core.formatter.blank_lines_between_import_groups=0\n')
			f.append('org.eclipse.jdt.core.formatter.blank_lines_between_type_declarations=2\n')
			f.append('org.eclipse.jdt.core.formatter.brace_position_for_annotation_type_declaration=end_of_line\n')
			f.append('org.eclipse.jdt.core.formatter.brace_position_for_anonymous_type_declaration=end_of_line\n')
			f.append('org.eclipse.jdt.core.formatter.brace_position_for_array_initializer=end_of_line\n')
			f.append('org.eclipse.jdt.core.formatter.brace_position_for_block=end_of_line\n')
			f.append('org.eclipse.jdt.core.formatter.brace_position_for_block_in_case=end_of_line\n')
			f.append('org.eclipse.jdt.core.formatter.brace_position_for_constructor_declaration=end_of_line\n')
			f.append('org.eclipse.jdt.core.formatter.brace_position_for_enum_constant=end_of_line\n')
			f.append('org.eclipse.jdt.core.formatter.brace_position_for_enum_declaration=end_of_line\n')
			f.append('org.eclipse.jdt.core.formatter.brace_position_for_lambda_body=end_of_line\n')
			f.append('org.eclipse.jdt.core.formatter.brace_position_for_method_declaration=end_of_line\n')
			f.append('org.eclipse.jdt.core.formatter.brace_position_for_switch=end_of_line\n')
			f.append('org.eclipse.jdt.core.formatter.brace_position_for_type_declaration=end_of_line\n')
			f.append('org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_block_comment=false\n')
			f.append('org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_javadoc_comment=false\n')
			f.append('org.eclipse.jdt.core.formatter.comment.count_line_length_from_starting_position=true\n')
			f.append('org.eclipse.jdt.core.formatter.comment.format_block_comments=true\n')
			f.append('org.eclipse.jdt.core.formatter.comment.format_header=true\n')
			f.append('org.eclipse.jdt.core.formatter.comment.format_html=true\n')
			f.append('org.eclipse.jdt.core.formatter.comment.format_javadoc_comments=true\n')
			f.append('org.eclipse.jdt.core.formatter.comment.format_line_comments=true\n')
			f.append('org.eclipse.jdt.core.formatter.comment.format_source_code=true\n')
			f.append('org.eclipse.jdt.core.formatter.comment.indent_parameter_description=false\n')
			f.append('org.eclipse.jdt.core.formatter.comment.indent_root_tags=true\n')
			f.append('org.eclipse.jdt.core.formatter.comment.insert_new_line_before_root_tags=insert\n')
			f.append('org.eclipse.jdt.core.formatter.comment.insert_new_line_for_parameter=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.comment.line_length=100\n')
			f.append('org.eclipse.jdt.core.formatter.comment.new_lines_at_block_boundaries=true\n')
			f.append('org.eclipse.jdt.core.formatter.comment.new_lines_at_javadoc_boundaries=true\n')
			f.append('org.eclipse.jdt.core.formatter.comment.preserve_white_space_between_code_and_line_comments=false\n')
			f.append('org.eclipse.jdt.core.formatter.compact_else_if=true\n')
			f.append('org.eclipse.jdt.core.formatter.continuation_indentation=2\n')
			f.append('org.eclipse.jdt.core.formatter.continuation_indentation_for_array_initializer=2\n')
			f.append('org.eclipse.jdt.core.formatter.disabling_tag=@formatter\\:off\n')
			f.append('org.eclipse.jdt.core.formatter.enabling_tag=@formatter\\:on\n')
			f.append('org.eclipse.jdt.core.formatter.format_guardian_clause_on_one_line=false\n')
			f.append('org.eclipse.jdt.core.formatter.format_line_comment_starting_on_first_column=true\n')
			f.append('org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_annotation_declaration_header=true\n')
			f.append('org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_constant_header=true\n')
			f.append('org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_declaration_header=true\n')
			f.append('org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_type_header=true\n')
			f.append('org.eclipse.jdt.core.formatter.indent_breaks_compare_to_cases=true\n')
			f.append('org.eclipse.jdt.core.formatter.indent_empty_lines=false\n')
			f.append('org.eclipse.jdt.core.formatter.indent_statements_compare_to_block=true\n')
			f.append('org.eclipse.jdt.core.formatter.indent_statements_compare_to_body=true\n')
			f.append('org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_cases=true\n')
			f.append('org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_switch=true\n')
			f.append('org.eclipse.jdt.core.formatter.indentation.size=4\n')
			f.append('org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_enum_constant=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_field=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_local_variable=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_method=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_package=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_parameter=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_type=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_new_line_after_label=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_new_line_after_opening_brace_in_array_initializer=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_new_line_after_type_annotation=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_new_line_at_end_of_file_if_missing=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_new_line_before_catch_in_try_statement=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_new_line_before_closing_brace_in_array_initializer=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_new_line_before_else_in_if_statement=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_new_line_before_finally_in_try_statement=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_new_line_before_while_in_do_statement=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_new_line_in_empty_annotation_declaration=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_new_line_in_empty_anonymous_type_declaration=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_new_line_in_empty_block=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_constant=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_declaration=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_new_line_in_empty_method_body=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_new_line_in_empty_type_declaration=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_after_and_in_type_parameter=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_after_assignment_operator=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation_type_declaration=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_after_binary_operator=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_arguments=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_parameters=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_after_closing_brace_in_block=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_after_closing_paren_in_cast=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_after_colon_in_assert=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_after_colon_in_case=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_after_colon_in_conditional=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_after_colon_in_for=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_after_colon_in_labeled_statement=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_after_comma_in_allocation_expression=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_after_comma_in_annotation=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_after_comma_in_array_initializer=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_parameters=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_throws=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_constant_arguments=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_declarations=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_after_comma_in_explicitconstructorcall_arguments=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_increments=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_inits=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_parameters=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_throws=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_invocation_arguments=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_field_declarations=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_local_declarations=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_after_comma_in_parameterized_type_reference=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_after_comma_in_superinterfaces=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_arguments=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_parameters=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_after_ellipsis=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_after_lambda_arrow=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_parameterized_type_reference=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_arguments=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_parameters=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_after_opening_brace_in_array_initializer=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_allocation_expression=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_reference=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_annotation=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_cast=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_catch=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_constructor_declaration=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_enum_constant=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_for=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_if=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_declaration=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_invocation=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_parenthesized_expression=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_switch=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_synchronized=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_try=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_while=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_after_postfix_operator=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_after_prefix_operator=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_after_question_in_conditional=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_after_question_in_wildcard=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_for=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_try_resources=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_after_unary_operator=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_and_in_type_parameter=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_assignment_operator=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_at_in_annotation_type_declaration=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_binary_operator=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_parameterized_type_reference=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_arguments=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_parameters=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_closing_brace_in_array_initializer=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_allocation_expression=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_reference=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_annotation=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_cast=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_catch=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_constructor_declaration=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_enum_constant=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_for=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_if=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_declaration=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_invocation=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_parenthesized_expression=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_switch=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_synchronized=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_try=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_while=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_colon_in_assert=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_colon_in_case=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_colon_in_conditional=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_colon_in_default=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_colon_in_for=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_colon_in_labeled_statement=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_comma_in_allocation_expression=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_comma_in_annotation=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_comma_in_array_initializer=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_parameters=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_throws=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_constant_arguments=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_declarations=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_comma_in_explicitconstructorcall_arguments=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_increments=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_inits=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_parameters=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_throws=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_invocation_arguments=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_field_declarations=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_local_declarations=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_comma_in_parameterized_type_reference=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_comma_in_superinterfaces=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_arguments=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_parameters=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_ellipsis=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_lambda_arrow=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_parameterized_type_reference=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_arguments=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_parameters=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_annotation_type_declaration=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_anonymous_type_declaration=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_array_initializer=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_block=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_constructor_declaration=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_constant=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_declaration=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_method_declaration=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_switch=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_type_declaration=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_allocation_expression=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_reference=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_type_reference=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation_type_member_declaration=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_catch=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_constructor_declaration=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_enum_constant=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_for=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_if=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_declaration=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_invocation=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_parenthesized_expression=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_switch=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_synchronized=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_try=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_while=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_return=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_throw=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_postfix_operator=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_prefix_operator=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_question_in_conditional=insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_question_in_wildcard=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_semicolon=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_for=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_try_resources=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_before_unary_operator=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_between_brackets_in_array_type_reference=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_between_empty_braces_in_array_initializer=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_between_empty_brackets_in_array_allocation_expression=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_annotation_type_member_declaration=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_constructor_declaration=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_enum_constant=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_declaration=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_invocation=do not insert\n')
			f.append('org.eclipse.jdt.core.formatter.join_lines_in_comments=true\n')
			f.append('org.eclipse.jdt.core.formatter.join_wrapped_lines=true\n')
			f.append('org.eclipse.jdt.core.formatter.keep_else_statement_on_same_line=false\n')
			f.append('org.eclipse.jdt.core.formatter.keep_empty_array_initializer_on_one_line=false\n')
			f.append('org.eclipse.jdt.core.formatter.keep_imple_if_on_one_line=false\n')
			f.append('org.eclipse.jdt.core.formatter.keep_then_statement_on_same_line=false\n')
			f.append('org.eclipse.jdt.core.formatter.lineSplit=100\n')
			f.append('org.eclipse.jdt.core.formatter.never_indent_block_comments_on_first_column=false\n')
			f.append('org.eclipse.jdt.core.formatter.never_indent_line_comments_on_first_column=false\n')
			f.append('org.eclipse.jdt.core.formatter.number_of_blank_lines_at_beginning_of_method_body=0\n')
			f.append('org.eclipse.jdt.core.formatter.number_of_empty_lines_to_preserve=3\n')
			f.append('org.eclipse.jdt.core.formatter.parentheses_positions_in_annotation=common_lines\n')
			f.append('org.eclipse.jdt.core.formatter.parentheses_positions_in_catch_clause=common_lines\n')
			f.append('org.eclipse.jdt.core.formatter.parentheses_positions_in_enum_constant_declaration=common_lines\n')
			f.append('org.eclipse.jdt.core.formatter.parentheses_positions_in_for_statment=common_lines\n')
			f.append('org.eclipse.jdt.core.formatter.parentheses_positions_in_if_while_statement=common_lines\n')
			f.append('org.eclipse.jdt.core.formatter.parentheses_positions_in_lambda_declaration=common_lines\n')
			f.append('org.eclipse.jdt.core.formatter.parentheses_positions_in_method_delcaration=common_lines\n')
			f.append('org.eclipse.jdt.core.formatter.parentheses_positions_in_method_invocation=common_lines\n')
			f.append('org.eclipse.jdt.core.formatter.parentheses_positions_in_switch_statement=common_lines\n')
			f.append('org.eclipse.jdt.core.formatter.parentheses_positions_in_try_clause=common_lines\n')
			f.append('org.eclipse.jdt.core.formatter.put_empty_statement_on_new_line=false\n')
			f.append('org.eclipse.jdt.core.formatter.tabulation.char=space\n')
			f.append('org.eclipse.jdt.core.formatter.tabulation.size=2\n')
			f.append('org.eclipse.jdt.core.formatter.use_on_off_tags=true\n')
			f.append('org.eclipse.jdt.core.formatter.use_tabs_only_for_leading_indentations=false\n')
			f.append('org.eclipse.jdt.core.formatter.wrap_before_assignment_operator=false\n')
			f.append('org.eclipse.jdt.core.formatter.wrap_before_binary_operator=true\n')
			f.append('org.eclipse.jdt.core.formatter.wrap_before_conditional_operator=true\n')
			f.append('org.eclipse.jdt.core.formatter.wrap_before_or_operator_multicatch=true\n')
			f.append('org.eclipse.jdt.core.formatter.wrap_outer_expressions_when_nested=true\n')
			f.append('org.eclipse.jdt.core.javaFormatter=org.eclipse.jdt.core.defaultJavaFormatter\n')
		}
	}
	
